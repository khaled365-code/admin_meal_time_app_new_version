name: new_admin_meal_time_app
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.3

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  #Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern. Built to be used with the bloc state management package
  flutter_bloc: ^8.1.6


  #An SVG rendering and widget library for Flutter, which allows painting and displaying Scalable Vector Graphics 1.1 files.
  flutter_svg: ^2.0.10+1

  #Toast Library for Flutter, Easily create toast messages in single line of code
  fluttertoast: ^8.2.6

  #Flutter plugin for selecting images from the Android and iOS image library, and taking new pictures with the camera
  image_picker: ^1.1.2

  #A powerful HTTP networking package, supports Interceptors, Aborting and canceling a request, Custom adapters, Transformers, etc
  dio: ^5.5.0+1

  #Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android
  shared_preferences: ^2.2.3

  #Functional Programming in Dart. Purify your Dart code using efficient immutable data structures, monads, lenses and other FP tools
  dartz: ^0.10.1

  #This small library helps you to decode Json Web Tokens, you can also know if a JWT is already expired
  jwt_decoder: ^2.0.1

  #A simple (but correct) dart class for validating email addresses
  email_validator: ^3.0.0

  #Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the concrete implementation from everywhere in your App"
  get_it: ^7.7.0

  #Render After Effects animations natively on Flutter. This package is a pure Dart implementation of a Lottie player.
  lottie: ^3.1.2

  #A package provides an easy way to add shimmer effect in Flutter project
  shimmer: ^3.0.0

  #A flutter plugin for adapting screen and font size.Guaranteed to look good on different models
  flutter_screenutil: ^5.9.3

  #Generic cache manager for flutter. Saves web files on the storages of the device and saves the cache info using sqflite.
  flutter_cache_manager: ^3.4.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
      - assets/images/
      - assets/icons/
      - assets/gif/
      - assets/lotties/
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
        - family: Inter
          fonts:
            - asset: assets/fonts/Inter-Regular.ttf
        - family: DM Sans
          fonts:
            - asset: assets/fonts/DMSans_36pt-Regular.ttf
        - family: Manrope
          fonts:
            - asset: assets/fonts/Manrope-Regular.ttf
        - family: Montserrat
          fonts:
            - asset: assets/fonts/Montserrat-Regular.ttf

        - family: Nunito
          fonts:
            - asset: assets/fonts/Nunito-Regular.ttf

        - family: Nunito Sans
          fonts:
            - asset: assets/fonts/NunitoSans_10pt-Regular.ttf

        - family: Open Sans
          fonts:
            - asset: assets/fonts/OpenSans-Regular.ttf

        - family: Poppins
          fonts:
            - asset: assets/fonts/Poppins-Regular.ttf

        - family: Roboto
          fonts:
            - asset: assets/fonts/Roboto-Regular.ttf

        - family: Roboto
          fonts:
            - asset: assets/fonts/Roboto-Regular.ttf

        - family: Space Grotesk
          fonts:
            - asset: assets/fonts/SpaceGrotesk-Regular.ttf
        - family: Playfair Display
          fonts:
            - asset: assets/fonts/PlayfairDisplay-Regular.ttf
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
